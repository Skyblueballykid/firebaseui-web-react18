{"version":3,"file":"FirebaseAuth.js","names":["FirebaseAuth","props","uiConfig","firebaseAuth","className","uiCallback","element","React","createRef","userSignedIn","require","firebaseui","firebaseUiWidget","auth","AuthUI","getInstance","signInFlow","reset","unregisterAuthObserver","onAuthStateChanged","user","start","current"],"sources":["../src/FirebaseAuth.jsx"],"sourcesContent":["/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// @flow\n\nimport { useEffect } from 'react';\n\n/**\n * React wrapper for the FirebaseUI Auth widget.\n */\nconst FirebaseAuth = (props) => {\n  const {\n    uiConfig,\n    firebaseAuth,\n    className,\n    uiCallback,\n  } = props;\n\n  let element = React.createRef();\n\n  useEffect(() => {\n    let userSignedIn = false;\n\n    // Import the css only on the client.\n    require('firebaseui/dist/firebaseui.css');\n\n    // Firebase UI only works on the Client. So we're loading the package in `useEffect`\n    // So that this works when doing server-side rendering.\n    const firebaseui = require('firebaseui');\n  \n    // Get or Create a firebaseUI instance.\n    const firebaseUiWidget =\n      firebaseui.auth.AuthUI.getInstance() ||\n      new firebaseui.auth.AuthUI(firebaseAuth);\n  \n    if (uiConfig.signInFlow === 'popup') {\n      firebaseUiWidget.reset();\n    }\n\n    // We track the auth state to reset firebaseUi if the user signs out.\n    const unregisterAuthObserver = onAuthStateChanged(firebaseAuth, (user) => {\n      if (!user && userSignedIn) {\n        firebaseUiWidget.reset();\n      }\n      userSignedIn = !!user;\n    });\n\n    // Trigger the callback if any was set.\n    if (uiCallback) {\n      uiCallback(firebaseUiWidget);\n    }\n\n    // Render the firebaseUi Widget.\n    firebaseUiWidget.start(this.element.current, this.uiConfig);\n  \n    return () => {\n      unregisterAuthObserver();\n      firebaseUiWidget.reset();\n    };\n  }, [uiConfig]);\n\n  return (\n    <div className={className} ref={element} />\n  );\n};\n\nexport default FirebaseAuth;\n"],"mappings":";;;;;AAiBA;;AAKA,MAAMA,YAAY,GAAIC,KAAD,IAAW;EAC9B,MAAM;IACJC,QADI;IAEJC,YAFI;IAGJC,SAHI;IAIJC;EAJI,IAKFJ,KALJ;EAOA,IAAIK,OAAO,GAAGC,KAAK,CAACC,SAAN,EAAd;EAEA,sBAAU,MAAM;IACd,IAAIC,YAAY,GAAG,KAAnB;;IAGAC,OAAO,CAAC,gCAAD,CAAP;;IAIA,MAAMC,UAAU,GAAGD,OAAO,CAAC,YAAD,CAA1B;;IAGA,MAAME,gBAAgB,GACpBD,UAAU,CAACE,IAAX,CAAgBC,MAAhB,CAAuBC,WAAvB,MACA,IAAIJ,UAAU,CAACE,IAAX,CAAgBC,MAApB,CAA2BX,YAA3B,CAFF;;IAIA,IAAID,QAAQ,CAACc,UAAT,KAAwB,OAA5B,EAAqC;MACnCJ,gBAAgB,CAACK,KAAjB;IACD;;IAGD,MAAMC,sBAAsB,GAAGC,kBAAkB,CAAChB,YAAD,EAAgBiB,IAAD,IAAU;MACxE,IAAI,CAACA,IAAD,IAASX,YAAb,EAA2B;QACzBG,gBAAgB,CAACK,KAAjB;MACD;;MACDR,YAAY,GAAG,CAAC,CAACW,IAAjB;IACD,CALgD,CAAjD;;IAQA,IAAIf,UAAJ,EAAgB;MACdA,UAAU,CAACO,gBAAD,CAAV;IACD;;IAGDA,gBAAgB,CAACS,KAAjB,CAAuB,SAAKf,OAAL,CAAagB,OAApC,EAA6C,SAAKpB,QAAlD;IAEA,OAAO,MAAM;MACXgB,sBAAsB;MACtBN,gBAAgB,CAACK,KAAjB;IACD,CAHD;EAID,CAvCD,EAuCG,CAACf,QAAD,CAvCH;EAyCA,OACE;IAAK,SAAS,EAAEE,SAAhB;IAA2B,GAAG,EAAEE;EAAhC,EADF;AAGD,CAtDD;;eAwDeN,Y"}