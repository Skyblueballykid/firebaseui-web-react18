{"version":3,"sources":["../src/FirebaseAuth.jsx"],"names":["firebaseUiDeletion","Promise","resolve","FirebaseAuth","props","uiConfig","firebaseAuth","className","uiCallback","element","React","createRef","unregisterAuthObserver","componentDidMount","require","firebaseui","then","firebaseUiWidget","auth","AuthUI","getInstance","signInFlow","reset","userSignedIn","onAuthStateChanged","user","start","current","componentWillUnmount","delete","render","Component"],"mappings":";;;;AAiBA;;;;;;;;;;;;AAGA,IAAIA,qBAAqBC,QAAQC,OAAR,EAAzB;;IAKqBC,Y;;;AAOnB,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,4BAAMA,KAAN,CADiB;;AAGjB,UAAKC,QAAL,GAAgBD,MAAMC,QAAtB;AACA,UAAKC,YAAL,GAAoBF,MAAME,YAA1B;AACA,UAAKC,SAAL,GAAiBH,MAAMG,SAAvB;AACA,UAAKC,UAAL,GAAkBJ,MAAMI,UAAxB;;AAEA,UAAKC,OAAL,GAAeC,gBAAMC,SAAN,EAAf;;AAEA,UAAKC,sBAAL,GAA8B,YAAM,CAAE,CAAtC;AAViB;AAWlB;;yBAKDC,iB,gCAAoB;AAAA;;AAElBC,YAAQ,gCAAR;;AAIA,QAAMC,aAAaD,QAAQ,YAAR,CAAnB;;AAIA,WAAOd,mBAAmBgB,IAAnB,CAAwB,YAAM;AAEnC,aAAKC,gBAAL,GAAwBF,WAAWG,IAAX,CAAgBC,MAAhB,CAAuBC,WAAvB,MAChB,IAAIL,WAAWG,IAAX,CAAgBC,MAApB,CAA2B,OAAKb,YAAhC,CADR;AAEA,UAAI,OAAKD,QAAL,CAAcgB,UAAd,KAA6B,OAAjC,EAA0C;AACxC,eAAKJ,gBAAL,CAAsBK,KAAtB;AACD;;AAGD,aAAKC,YAAL,GAAoB,KAApB;AACA,aAAKX,sBAAL,GAA8B,OAAKN,YAAL,CAAkBkB,kBAAlB,CAAqC,UAACC,IAAD,EAAU;AAC3E,YAAI,CAACA,IAAD,IAAS,OAAKF,YAAlB,EAAgC;AAC9B,iBAAKN,gBAAL,CAAsBK,KAAtB;AACD;AACD,eAAKC,YAAL,GAAoB,CAAC,CAACE,IAAtB;AACD,OAL6B,CAA9B;;AAQA,UAAI,OAAKjB,UAAT,EAAqB;AACnB,eAAKA,UAAL,CAAgB,OAAKS,gBAArB;AACD;;AAGD,aAAKA,gBAAL,CAAsBS,KAAtB,CAA4B,OAAKjB,OAAL,CAAakB,OAAzC,EAAkD,OAAKtB,QAAvD;AACD,KAxBM,CAAP;AAyBD,G;;yBAKDuB,oB,mCAAuB;AAAA;;AACrB5B,yBAAqBA,mBAAmBgB,IAAnB,CAAwB,YAAM;AACjD,aAAKJ,sBAAL;AACA,aAAO,OAAKK,gBAAL,CAAsBY,MAAtB,EAAP;AACD,KAHoB,CAArB;AAIA,WAAO7B,kBAAP;AACD,G;;yBAqBD8B,M,qBAAS;AACP,WACE,uCAAK,WAAW,KAAKvB,SAArB,EAAgC,KAAK,KAAKE,OAA1C,GADF;AAGD,G;;;EA9FuCC,gBAAMqB,S;;kBAA3B5B,Y","file":"FirebaseAuth.js","sourcesContent":["/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// @flow\n\nimport React from 'react';\n\n// Promise that resolves unless the FirebaseUI instance is currently being deleted.\nlet firebaseUiDeletion = Promise.resolve();\n\n/**\n * React Component wrapper for the FirebaseUI Auth widget.\n */\nexport default class FirebaseAuth extends React.Component {\n  /**\n   * Constructor  Firebase Auth UI component\n   *\n   * @param {Object} props - Additional object properties.\n   * @constructor\n   */\n  constructor(props) {\n    super(props);\n\n    this.uiConfig = props.uiConfig;\n    this.firebaseAuth = props.firebaseAuth;\n    this.className = props.className;\n    this.uiCallback = props.uiCallback;\n\n    this.element = React.createRef();\n\n    this.unregisterAuthObserver = () => {};\n  }\n\n  /**\n   * @inheritDoc\n   */\n  componentDidMount() {\n    // Import the css only on the client.\n    require('firebaseui/dist/firebaseui.css');\n\n    // Firebase UI only works on the Client. So we're loading the package in `componentDidMount`\n    // So that this works when doing server-side rendering.\n    const firebaseui = require('firebaseui');\n\n    // Wait in case the firebase UI instance is being deleted.\n    // This can happen if you unmount/remount the element quickly.\n    return firebaseUiDeletion.then(() => {\n      // Get or Create a firebaseUI instance.\n      this.firebaseUiWidget = firebaseui.auth.AuthUI.getInstance()\n           || new firebaseui.auth.AuthUI(this.firebaseAuth);\n      if (this.uiConfig.signInFlow === 'popup') {\n        this.firebaseUiWidget.reset();\n      }\n\n      // We track the auth state to reset firebaseUi if the user signs out.\n      this.userSignedIn = false;\n      this.unregisterAuthObserver = this.firebaseAuth.onAuthStateChanged((user) => {\n        if (!user && this.userSignedIn) {\n          this.firebaseUiWidget.reset();\n        }\n        this.userSignedIn = !!user;\n      });\n\n      // Trigger the callback if any was set.\n      if (this.uiCallback) {\n        this.uiCallback(this.firebaseUiWidget);\n      }\n\n      // Render the firebaseUi Widget.\n      this.firebaseUiWidget.start(this.element.current, this.uiConfig);\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  componentWillUnmount() {\n    firebaseUiDeletion = firebaseUiDeletion.then(() => {\n      this.unregisterAuthObserver();\n      return this.firebaseUiWidget.delete();\n    });\n    return firebaseUiDeletion;\n  }\n\n  /**\n   * Properties types.\n   */\n  props: {\n    // The Firebase UI Web UI Config object.\n    // See: https://github.com/firebase/firebaseui-web#configuration\n    uiConfig: Object,\n    // The Firebase App auth instance to use.\n    firebaseAuth: Object,\n    // Callback that will be passed the FirebaseUi instance before it is\n    // started. This allows access to certain configuration options such as\n    // disableAutoSignIn().\n    uiCallback?: Function,\n    className?: String,\n  };\n\n  /**\n   * @inheritDoc\n   */\n  render() {\n    return (\n      <div className={this.className} ref={this.element}/>\n    );\n  }\n}\n"]}